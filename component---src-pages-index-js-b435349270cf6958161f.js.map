{"version":3,"sources":["webpack:///./node_modules/@chakra-ui/layout/dist/esm/flex.js","webpack:///./src/pages/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","Flex","props","ref","direction","align","justify","wrap","basis","grow","shrink","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","styles","display","flexDirection","alignItems","justifyContent","flexWrap","flexBasis","flexGrow","flexShrink","div","__css","displayName","ConferenceCard","conference","p","border","borderColor","borderRadius","shadow","mb","as","size","shortName","toUpperCase","fontSize","longName","spacing","years","sort","a","b","year","map","to","colorScheme","variant","IndexPage","data","conferences","nodes","buildDate","currentBuildDate","currentDate","px","id"],"mappings":"0MAAA,SAASA,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,IAK3B,OAAOL,IAGOS,MAAMC,KAAMR,WA8BvB,IAAIS,EAAoB,aAAW,SAAUC,EAAOC,GACzD,IAAIC,EAAYF,EAAME,UAClBC,EAAQH,EAAMG,MACdC,EAAUJ,EAAMI,QAChBC,EAAOL,EAAMK,KACbC,EAAQN,EAAMM,MACdC,EAAOP,EAAMO,KACbC,EAASR,EAAMQ,OACfC,EAnCN,SAAuCjB,EAAQkB,GAC7C,GAAc,MAAVlB,EAAgB,MAAO,GAC3B,IAEIC,EAAKJ,EAFLD,EAAS,GACTuB,EAAazB,OAAO0B,KAAKpB,GAG7B,IAAKH,EAAI,EAAGA,EAAIsB,EAAWpB,OAAQF,IACjCI,EAAMkB,EAAWtB,GACbqB,EAASG,QAAQpB,IAAQ,IAC7BL,EAAOK,GAAOD,EAAOC,IAGvB,OAAOL,EAuBI0B,CAA8Bd,EAAO,CAAC,YAAa,QAAS,UAAW,OAAQ,QAAS,OAAQ,WAEvGe,EAAS,CACXC,QAAS,OACTC,cAAef,EACfgB,WAAYf,EACZgB,eAAgBf,EAChBgB,SAAUf,EACVgB,UAAWf,EACXgB,SAAUf,EACVgB,WAAYf,GAEd,OAAoB,gBAAoB,IAAOgB,IAAKvC,EAAS,CAC3DgB,IAAKA,EACLwB,MAAOV,GACNN,OAGD,MACFV,EAAK2B,YAAc,Q,gECpErB,SAASC,EAAT,GAAyC,IAAfC,EAAc,EAAdA,WACxB,OACE,gBAAC,IAAD,CACEC,EAAG,EACHC,OAAO,MACPC,YAAY,WACZC,aAAa,KACbC,OAAO,KACPC,GAAI,GAEJ,gBAACnC,EAAD,KACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAQmC,GAAI,EAAGhB,WAAW,YACxB,gBAAC,IAAD,CAASiB,GAAG,KAAKC,KAAK,MACnBR,EAAWS,UAAUC,eAExB,gBAAC,IAAD,CAAMC,SAAS,MAAMX,EAAWY,WAElC,gBAAC,IAAD,CAAQC,QAAS,GACdb,EAAWc,MACTC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,KAAOF,EAAEE,QAC1BC,KAAI,gBAAGD,EAAH,EAAGA,KAAH,OACH,gBAAC,IAAD,CAAME,GAAE,IAAMpB,EAAWS,UAAjB,IAA8BS,EAAQrD,IAAKqD,GACjD,gBAAC,IAAD,CAAQG,YAAY,OAAOC,QAAQ,OAAOd,KAAK,MAC5CU,WAWN,SAASK,EAAT,GAA8B,IAATC,EAAQ,EAARA,KAC5BC,EAAcD,EAAKC,YAAYC,MAC/BC,EAAYH,EAAKI,iBAAiBC,YACxC,OACE,gBAAC,IAAD,CAAKtB,GAAG,OAAOuB,GAAI,GACjB,gBAAC,IAAD,CAAMnB,SAAS,KAAKL,GAAI,GAAxB,cACcmB,EAAY9D,OAD1B,iBAGC8D,EAAYN,KAAI,SAACnB,GAAD,OACf,gBAACD,EAAD,CAAgBlC,IAAKmC,EAAW+B,GAAI/B,WAAYA,OAElD,gBAAC,IAAD,CAAMW,SAAS,MAAf,mBAAqCgB,EAArC","file":"component---src-pages-index-js-b435349270cf6958161f.js","sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * React component used to create flexbox layouts.\n *\n * It renders a `div` with `display: flex` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/docs/layout/flex\n */\n\nexport var Flex = /*#__PURE__*/forwardRef(function (props, ref) {\n  var direction = props.direction,\n      align = props.align,\n      justify = props.justify,\n      wrap = props.wrap,\n      basis = props.basis,\n      grow = props.grow,\n      shrink = props.shrink,\n      rest = _objectWithoutPropertiesLoose(props, [\"direction\", \"align\", \"justify\", \"wrap\", \"basis\", \"grow\", \"shrink\"]);\n\n  var styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink\n  };\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: styles\n  }, rest));\n});\n\nif (__DEV__) {\n  Flex.displayName = \"Flex\";\n}","import { Box, Flex, Heading, HStack, Text, Button } from \"@chakra-ui/react\";\nimport { Link } from \"gatsby\";\nimport * as React from \"react\";\n\nfunction ConferenceCard({ conference }) {\n  return (\n    <Box\n      p={3}\n      border=\"1px\"\n      borderColor=\"gray.200\"\n      borderRadius=\"sm\"\n      shadow=\"sm\"\n      mb={2}\n    >\n      <Flex>\n        <Box>\n          <HStack mb={2} alignItems=\"baseline\">\n            <Heading as=\"h4\" size=\"sm\">\n              {conference.shortName.toUpperCase()}\n            </Heading>\n            <Text fontSize=\"sm\">{conference.longName}</Text>\n          </HStack>\n          <HStack spacing={2}>\n            {conference.years\n              .sort((a, b) => b.year - a.year)\n              .map(({ year }) => (\n                <Link to={`/${conference.shortName}/${year}`} key={year}>\n                  <Button colorScheme=\"blue\" variant=\"link\" size=\"sm\">\n                    {year}\n                  </Button>\n                </Link>\n              ))}\n          </HStack>\n        </Box>\n      </Flex>\n    </Box>\n  );\n}\n\nexport default function IndexPage({ data }) {\n  const conferences = data.conferences.nodes;\n  const buildDate = data.currentBuildDate.currentDate;\n  return (\n    <Box as=\"main\" px={1}>\n      <Text fontSize=\"md\" mb={3}>\n        Displaying {conferences.length} conferences.\n      </Text>\n      {conferences.map((conference) => (\n        <ConferenceCard key={conference.id} conference={conference} />\n      ))}\n      <Text fontSize=\"sm\">Last updated on {buildDate}.</Text>\n    </Box>\n  );\n}\n\nexport const query = graphql`\n  query ConferenceQuery {\n    conferences: allConference(sort: { order: ASC, fields: shortName }) {\n      nodes {\n        id\n        shortName\n        longName\n        years {\n          year\n        }\n      }\n    }\n    currentBuildDate {\n      currentDate\n    }\n  }\n`;\n"],"sourceRoot":""}